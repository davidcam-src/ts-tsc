name: CD Pipeline

on:
  workflow_dispatch:
    inputs:
      AWS_ACCESS_KEY_ID: 
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_SESSION_TOKEN:
        required: true
env:
  ECR_REGISTRY: 356223155086.dkr.ecr.us-east-1.amazonaws.com
  ECR_REPOSITORY: ts-tsc
  AWS_REGION: us-east-1
  ECR_IMAGE_TAG: node-ec2

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ github.event.inputs.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ github.event.inputs.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ github.event.inputs.AWS_SESSION_TOKEN }}
          aws-region: us-east-1
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          aws-access-key-id: ${{ github.event.inputs.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ github.event.inputs.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Build and push Docker image
        id: build-image
        env:
          ECR_IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$ECR_IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$ECR_IMAGE_TAG
        shell: bash
      - name: Update EC2 instance with latest image
        env:
          ECR_IMAGE_TAG: ${{ github.sha }}
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY
          docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$ECR_IMAGE_TAG
          docker stop app_container || true
          docker rm app_container || true
          docker run -d --name your-container-name -p 4000:4000 $ECR_REGISTRY/$ECR_REPOSITORY:$ECR_IMAGE_TAG
