name: CD Pipeline

on:
  push:
    branches:
      - main

env:
  ECR_REGISTRY: 356223155086.dkr.ecr.us-east-1.amazonaws.com
  ECR_REPOSITORY: ts-tsc
  AWS_REGION: us-east-1
  AWS_ACCESS_KEY_ID: "ASIAVF4EN7OHB2LPMZHW"
  AWS_SECRET_ACCESS_KEY: "dDbeUoP6kHVUqlQBIn2yB8/y2XJ/b2yYteXT+bIO"
    
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: us-east-1
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build and push Docker image
        id: build-image
        env:
          ECR_IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$ECR_IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$ECR_IMAGE_TAG
        shell: bash
      - name: Update EC2 instance with latest image
        env:
          ECR_IMAGE_TAG: ${{ github.sha }}
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY
          docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$ECR_IMAGE_TAG
          docker stop your-container-name || true
          docker rm your-container-name || true
          docker run -d --name your-container-name -p 4000:4000 $ECR_REGISTRY/$ECR_REPOSITORY:$ECR_IMAGE_TAG


